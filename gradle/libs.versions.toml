[versions]
agp = "7.4.0"
kotlin = "1.8.0"
javaRelease = "8"
jvmTarget = "1.8"
kotlinpoet = "1.12.0"
ksp = "1.8.0-1.0.8"
material = "1.6.1"
androidxActivity = "1.4.0"
androidxCompose = "1.3.1"
androidxComposeCompiler = "1.4.0"
landscapist = "2.1.8"
coroutines = "1.6.4"
retrofit = "2.9.0"
retrofitAdapters = "1.0.6"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version = "1.7.10" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
nexusPlugin = { id = "io.github.gradle-nexus.publish-plugin", version = "1.1.0" }
spotless = { id = "com.diffplug.spotless", version = "6.9.0" }
kotlinBinaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.11.0" }

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
ksp = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

# For the demo project
material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "androidxCompose" }
androidx-compose-material = { group = "androidx.compose.material", name = "material", version.ref = "androidxCompose" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "androidxCompose" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "androidxCompose" }
landscapist-glide = { module = "com.github.skydoves:landscapist-glide", version.ref = "landscapist" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
retrofit = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-adapters = { module = "com.github.skydoves:retrofit-adapters-result", version.ref = "retrofitAdapters" }

# Test libs
junit = { module = "junit:junit", version = "4.13.2" }
truth = { module = "com.google.truth:truth", version = "1.1.3" }
kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version = "1.5.0" }